<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array/>
	<key>foldingStartMarker</key>
	<string>^\s*(def|class)\s+([.a-zA-Z0-9_ &lt;]+)\s*(\((.*)\))?\s*:|\{\s*$|\(\s*$|\[\s*$|^\s*"""(?=.)(?!.*""")</string>
	<key>foldingStopMarker</key>
	<string>^\s*$|^\s*\}|^\s*\]|^\s*\)|^\s*"""\s*$</string>
	<key>keyEquivalent</key>
	<string>^~P</string>
	<key>name</key>
	<string>Python (Bottle)</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>^\s*(@)\s*(route)\s*(?=\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.decorator.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.decorator.python</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>a decorator may be a function call which returns a decorator.</string>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.end.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.decorator.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.begin.python</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.function.decorator.arguments.python</string>
					<key>end</key>
					<string>(?=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>([rR]?)"</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.type.string.python</string>
								</dict>
							</dict>
							<key>end</key>
							<string>"</string>
							<key>name</key>
							<string>string.quoted.double.single-line.raw-regexp.python</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#route_string</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>([rR]?)'</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.type.string.python</string>
								</dict>
							</dict>
							<key>end</key>
							<string>'</string>
							<key>name</key>
							<string>string.quoted.single.single-line.raw-regexp.python</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#route_string</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#keyword_arguments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>include</key>
			<string>source.python</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>keyword_arguments</key>
		<dict>
			<key>begin</key>
			<string>\b([a-zA-Z_][a-zA-Z_0-9]*)\s*(=)(?!=)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.python</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\s*(?:(,)|(?=$\n?|[\)\:]))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.parameters.python</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>regexp</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.character-class.regxexp</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;!\\)\(</string>
					<key>end</key>
					<string>(?&lt;!\\)\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#regexp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>route_string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.character.character-class.regxexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.character.character-class.regxexp</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(:\w+)(?:#([^#]+)#)?</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\((\?P&lt;)(\w+)(&gt;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.character.character-class.regxexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.section.group.regexp</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.character.character-class.regxexp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;!\\)\)</string>
					<key>name</key>
					<string>meta.group.regexp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#regexp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.python.bottle</string>
	<key>uuid</key>
	<string>81884D4F-55CB-46BB-B116-29ECEF944094</string>
</dict>
</plist>
